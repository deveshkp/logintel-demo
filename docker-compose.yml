version: '3.8'

services:
  elasticsearch:
    image: elasticsearch:9.1.0
    container_name: logintel-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTIC_PASSWORD=changeme
      - bootstrap.memory_lock=true
      - "cluster.name=docker-cluster"
      - "cluster.routing.allocation.disk.threshold_enabled=false"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - ./elasticsearch/templates:/usr/share/elasticsearch/templates:ro
    networks:
      - logintel-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  kibana:
    image: kibana:9.1.0
    container_name: logintel-kibana
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    volumes:
      - kibana_data:/usr/share/kibana/data
    networks:
      - logintel-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  mcp-server:
    build:
      context: .
      dockerfile: docker/Dockerfile.mcp
    container_name: logintel-mcp-server
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - ES_URL=http://elasticsearch:9200
      - ES_USERNAME=
      - ES_PASSWORD=
      - KIBANA_BASE_URL=http://localhost:5601
      - KIBANA_DATA_VIEW_ID=logs-*
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - ALLOWED_INDEX_PATTERNS=logs-*,meta-dictionary
      - MAX_RESULT_SIZE=200
    ports:
      - "8000:8000"
    networks:
      - logintel-network
    volumes:
      - ./scripts:/app/scripts:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  ui:
    build:
      context: .
      dockerfile: docker/Dockerfile.ui
    container_name: logintel-ui
    depends_on:
      mcp-server:
        condition: service_healthy
    ports:
      - "3000:3000"
    networks:
      - logintel-network
    environment:
      - REACT_APP_MCP_SERVER_URL=http://localhost:8000

volumes:
  elasticsearch_data:
  kibana_data:

networks:
  logintel-network:
    driver: bridge